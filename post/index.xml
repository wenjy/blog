<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 江湖义气的博客</title><link>https://blog.wenjy.top/post/</link><description>Recent content in Posts on 江湖义气的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 11 Oct 2019 22:31:57 +0800</lastBuildDate><atom:link href="https://blog.wenjy.top/post/index.xml" rel="self" type="application/rss+xml"/><item><title>工作中遇到的问题+踩过的坑</title><link>https://blog.wenjy.top/2019/01/01/work-debug.html</link><pubDate>Fri, 11 Oct 2019 22:31:57 +0800</pubDate><guid>https://blog.wenjy.top/2019/01/01/work-debug.html</guid><description>安装的虚拟机时间不同步 ntpdate cn.pool.ntp.org phpxdebug 运行失败，端口繁忙 因为 phpxdebug 端口和 php 默认监听的端口冲突，都是默认9000，把 phpxdebug port 设置为其它端口，如9001 本地测试环境curl，https</description></item><item><title>Mysql 索引学习</title><link>https://blog.wenjy.top/2019/10/11/mysql-index-optimize.html</link><pubDate>Fri, 11 Oct 2019 22:30:57 +0800</pubDate><guid>https://blog.wenjy.top/2019/10/11/mysql-index-optimize.html</guid><description>一、索引 索引的类型（数据结构） 1. B-Tree 所有引擎都支持 InnoDB(根据主键引用被索引的行，索引和数据同一个文件)、MyISAM(通过数据的物理位置应用被索引的行，索引</description></item><item><title>Linux Lock的原理</title><link>https://blog.wenjy.top/2019/10/11/linux-lock-principle.html</link><pubDate>Fri, 11 Oct 2019 22:29:21 +0800</pubDate><guid>https://blog.wenjy.top/2019/10/11/linux-lock-principle.html</guid><description>《操作系统之哲学原理》-锁 死锁的4个必要条件 死锁发生的必要条件是 资源有限 持有等待 不能抢占资源 循环等待条件 哲学家就餐问题 哲学家每天只做两家事情：思考 吃饭 吃饭规矩：哲</description></item><item><title>PHP7数组的实现</title><link>https://blog.wenjy.top/2019/10/11/php7-array.html</link><pubDate>Fri, 11 Oct 2019 22:29:21 +0800</pubDate><guid>https://blog.wenjy.top/2019/10/11/php7-array.html</guid><description>PHP数组是一个有序的字典，它必须同时满足下面两个语义 PHP数组是一个字典，存储着键-值（key-value）对，通过键可以快速地找到对应的值，键可以是整形、字符</description></item><item><title>算法-一致性Hash</title><link>https://blog.wenjy.top/2019/04/01/algorithms-consistent-hash.html</link><pubDate>Mon, 01 Apr 2019 22:31:57 +0800</pubDate><guid>https://blog.wenjy.top/2019/04/01/algorithms-consistent-hash.html</guid><description>简介 一致性哈希算法（Consistent Hashing）最早在论文 《Consistent Hashing and Random Trees: Distributed Caching Protocols for Relieving Hot Spots on the World Wide Web》 中被提出。简单来说，一致性哈希将整个</description></item><item><title>算法-简单的概率算法</title><link>https://blog.wenjy.top/2019/04/01/algorithms-probability.html</link><pubDate>Mon, 01 Apr 2019 22:31:57 +0800</pubDate><guid>https://blog.wenjy.top/2019/04/01/algorithms-probability.html</guid><description>经典概率算法简介 假设数组为：array(100,200,300,400)， 开始是从1,1000 这个概率范围内筛选第一个数是否在他的出现概率范围之内， 如果不在，则将</description></item><item><title>算法-简易模拟熔断器</title><link>https://blog.wenjy.top/2019/04/01/algorithms-circuit-breaker.html</link><pubDate>Mon, 01 Apr 2019 22:31:57 +0800</pubDate><guid>https://blog.wenjy.top/2019/04/01/algorithms-circuit-breaker.html</guid><description>简介 一个分布式系统中，服务间互相调用错综复杂，假设某个基础服务宕机，那么就会导致若干上游调用方出现访问超时，进而引起上游重试， 导致宕机的基础服务遭受到数倍的流量放</description></item><item><title>算法-二分查找</title><link>https://blog.wenjy.top/2019/03/01/algorithms-binary_search.html</link><pubDate>Fri, 01 Mar 2019 22:31:57 +0800</pubDate><guid>https://blog.wenjy.top/2019/03/01/algorithms-binary_search.html</guid><description>二分查找简介 二分查找又称折半查找，优点是比较次数少，查找速度快，平均性能好；其缺点是要求待查表为有序表，且插入删除困难。 因此，折半查找方法适用于不经常变动而查找频</description></item><item><title>算法-冒泡排序</title><link>https://blog.wenjy.top/2019/03/01/algorithms-bubble-sort.html</link><pubDate>Fri, 01 Mar 2019 22:31:57 +0800</pubDate><guid>https://blog.wenjy.top/2019/03/01/algorithms-bubble-sort.html</guid><description>冒泡排序简介 冒泡排序（Bubble Sort），是一种计算机科学领域的较简单的排序算法。 它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换</description></item><item><title>算法-归并排序</title><link>https://blog.wenjy.top/2019/03/01/algorithms-merge-sort.html</link><pubDate>Fri, 01 Mar 2019 22:31:57 +0800</pubDate><guid>https://blog.wenjy.top/2019/03/01/algorithms-merge-sort.html</guid><description>归并排序(快速排序) 分治法：将原问题分解为几个规模较小但类似的子问题，递归地求解这些子问题，然后再合并这些子问题的解来建立原问题的解 在最坏、最佳、平均情况下归并排</description></item><item><title>算法-排列组合</title><link>https://blog.wenjy.top/2019/03/01/algorithms-arrangement-combination.html</link><pubDate>Fri, 01 Mar 2019 22:31:57 +0800</pubDate><guid>https://blog.wenjy.top/2019/03/01/algorithms-arrangement-combination.html</guid><description>排列组合 数学上的阶乘、排列、组合的实现 代码实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58</description></item><item><title>算法-插入排序</title><link>https://blog.wenjy.top/2019/03/01/algorithms-insertion_sort.html</link><pubDate>Fri, 01 Mar 2019 22:31:57 +0800</pubDate><guid>https://blog.wenjy.top/2019/03/01/algorithms-insertion_sort.html</guid><description>插入排序简介 插入排序（Insertion sort）是一种简单直观且稳定的排序算法。 如果有一个已经有序的数据序列，要求在这个已经排好的数据序列中插入一个数，但要求插</description></item><item><title>算法-选择排序</title><link>https://blog.wenjy.top/2019/03/01/algorithms-select-sort.html</link><pubDate>Fri, 01 Mar 2019 22:31:57 +0800</pubDate><guid>https://blog.wenjy.top/2019/03/01/algorithms-select-sort.html</guid><description>选择排序 选择排序法思路：每次选择一个相应的元素，然后将其放到指定的位置 实现思路 双重循环完成，外层控制轮数，当前的最小值。内层控制的比较次数 代码实现 1 2 3 4 5 6 7 8</description></item><item><title>PHP Spl Datastructures</title><link>https://blog.wenjy.top/2017/12/20/php-spl-datastructures.html</link><pubDate>Wed, 20 Dec 2017 14:53:12 +0800</pubDate><guid>https://blog.wenjy.top/2017/12/20/php-spl-datastructures.html</guid><description>PHP文档 这里主要学习，PHP SPL 提供了一套标准的数据结构。 它们按底层实现进行分组, 通常定义了它们的一般应用领域 SplDoublyLinkedList 双向链表 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21</description></item><item><title>PHP Spl Iterators</title><link>https://blog.wenjy.top/2017/12/20/php-spl-iterators.html</link><pubDate>Wed, 20 Dec 2017 14:53:12 +0800</pubDate><guid>https://blog.wenjy.top/2017/12/20/php-spl-iterators.html</guid><description>PHP文档 PHP SPL 提供一系列迭代器以遍历不同的对象，有些比较实用（如ArrayAccess），有些比较鸡肋，从来没有使用过。 Iterator 实现一个最简单的迭代器接口 1 2 3 4 5 6 7</description></item></channel></rss>