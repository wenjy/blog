<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Phps on Wenjy's Blog</title><link>https://blog.wenjy.top/php/</link><description>Recent content in Phps on Wenjy's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 11 Oct 2019 22:29:21 +0800</lastBuildDate><atom:link href="https://blog.wenjy.top/php/index.xml" rel="self" type="application/rss+xml"/><item><title>PHP7 Array</title><link>https://blog.wenjy.top/php/php7-array/</link><pubDate>Fri, 11 Oct 2019 22:29:21 +0800</pubDate><guid>https://blog.wenjy.top/php/php7-array/</guid><description>PHP7数组的实现 PHP数组是一个有序的字典，它必须同时满足下面两个语义 PHP数组是一个字典，存储着键-值（key-value）对，通过键可以快速地找到对应的值，键可以是整形、字符串。
PHP数组是有序的，这个有序是指插入顺序，即遍历数组的时候，遍历元素的顺序应该和插入的顺序一致。
为了实现语义1，PHP使用 HashTable 来存储 key-value ，但是 HashTable 只能保证语义1
php使用了带h值的 HashTable key/value -&amp;gt; hash1函数 -&amp;gt; h值 -&amp;gt; hash2函数 -&amp;gt; slotN -&amp;gt; bucket()
示意图：
bucket里面增加了 h 字段
hash函数拆分成 hash1 和 hash2 函数，hash1 将 key 映射成 h值，hash2 将 h 值映射为 slot 的索引值
bucket 里的 key 作为字符串key
HashTable 的key可能为数字，也可能是字符串，如果是数字那么 h值就代表数字key，如果是字符串，计算出h值，key1和key2比较时 先比较它们的h值是否相等，如果相等在比较key1和key2是否相等，因为大部分场景，不同字符串的h值都不会相等，这样提高了 HashTable 的插入、查找速度。</description></item></channel></rss>